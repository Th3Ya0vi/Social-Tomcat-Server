<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">


<!-- 
create table USER(USER_ID_PRIMARY_KEY char(36) primary key,
ID tinytext,
friendid tinytext);
 -->
 
<hibernate-mapping>

    <class name="com.class3601.social.models.Friend" table="FRIEND" lazy="false">

         <!-- A 36 hex character is our surrogate key. It's automatically
            generated by Hibernate with the UUID pattern. -->
            
        <id name="friendIdPrimarKey" type="string" unsaved-value="null" >
            <column name="FRIEND_ID_PRIMARY_KEY" sql-type="char(36)" not-null="true" />
             <generator class="org.hibernate.id.UUIDGenerator"/>
        </id>

        <property name="id">
            <column name="ID" sql-type="tinytext" not-null="true"/>
        </property>
        
        <property name="friendid">
            <column name="FRIENDID" sql-type="tinytext" not-null="true"/>
        </property>
        
        <property name="status">
            <column name="STATUS" sql-type="tinytext" not-null="true"/>
        </property>
        
<!--         
         http://docs.jboss.org/hibernate/orm/3.3/reference/en/html/collections.html#collections-foreignkeys 
        lazy="false" is important to make sure that lazy reads are NOT done
        <bag name="addresses" table="ADDRESS" lazy="false" cascade="all">
    		<key column="USER_ID_FK" not-null="true"/>
    		<one-to-many class="com.class3601.models.Address"/>
		</bag>
		
		<one-to-one name="optionSetting" class="com.class3601.models.OptionSetting" cascade="all" />
		
		
		 http://www.dzone.com/tutorials/java/hibernate/hibernate-example/hibernate-mapping-many-to-many-1.html
		<set name="friends" table="USER_FRIEND_USER" lazy="false" cascade="all">
			<key column="USER_ID" />
			Note that hibernate uses the primary key of following class/table get value for column, which in this case
				happens to be another User
			<many-to-many column="FRIEND_USER_ID"  class="com.class3601.models.User" />
		</set> -->

    </class>

</hibernate-mapping>